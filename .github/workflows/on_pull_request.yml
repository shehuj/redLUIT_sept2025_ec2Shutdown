name: Deploy Lambda to beta, logs to CloudWatch.

on:
  pull_request:
    branches:
      - dev
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy-beta:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_REGION: ${{secrets.AWS_REGION}}
      LAMBDA_NAME_BETA: ${{secrets.LAMBDA_NAME_BETA}}
      S3_BUCKET_BETA: ${{secrets.S3_BUCKET_BETA}}
      S3_PATH_BETA: ${{secrets.S3_PATH_BETA}}
      CF_STACK_NAME_BETA: ${{secrets.CF_STACK_NAME_BETA}}
#      BETA_LOG_GROUP: ${{secrets.BETA_LOG_GROUP}}
#      BETA_LOG_STREAM: ${{secrets.BETA_LOG_STREAM}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
      - name: Run required files check
        run: |
          python test_check_required_files.py
        working-directory: tests
      - name: Display PR info
        run: |
          echo "Pull Request #${{ github.event.pull_request.number }}"
          echo "Head branch: ${{ github.head_ref }}"
          echo "Base branch: ${{ github.event.pull_request.base.ref }}"

      - name: Configure AWS credentials
        if: steps.run_required_files_check.outcome == 'success'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Zip Lambda Function
        run: zip ${{ env.LAMBDA_NAME_BETA }}.zip lambda_function_foundational.py


      - name: Upload to S3 (Beta)
        run: aws s3 cp ${{ env.LAMBDA_NAME_BETA }}.zip s3://${{ env.S3_BUCKET_BETA }}/${{ env.S3_PATH_BETA }}

      - name: Deploy CloudFormation (Beta)
        run: |
          aws cloudformation deploy \
            --stack-name ${{ env.CF_STACK_NAME_BETA }} \
            --template-file infrastructure/cloudformation/ec2-shutdown-foundational.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              LambdaFunctionName=${{ env.LAMBDA_NAME_BETA }} \
              LambdaCodeBucket=${{ env.S3_BUCKET_BETA }} \
              LambdaCodeKey=${{ env.S3_PATH_BETA }}
