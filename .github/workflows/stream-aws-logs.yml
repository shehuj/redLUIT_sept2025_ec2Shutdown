name: AWS Logging
on:
  push:
    branches:
      - main
      - dev
env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  AWS_REGION: ${{secrets.AWS_REGION}}
  BETA_LOG_GROUP: ${{secrets.BETA_LOG_GROUP}}
  PROD_LOG_GROUP: ${{secrets.PROD_LOG_GROUP}}
jobs:
  log_to_cloudwatch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Create log stream and put log event
        run: |
          LOG_STREAM_NAME=$(date -u +"%Y-%m-%dT%H-%M-%SZ")
          # Set log group based on branch
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            LOG_GROUP_NAME="${{ env.PROD_LOG_GROUP }}"
          else
            LOG_GROUP_NAME="${{ env.BETA_LOG_GROUP }}"
          fi
          # Check if log group name is set
          if [ -z "$LOG_GROUP_NAME" ]; then
            echo "Error: Log group name is empty. Please check your secrets PROD and BETA are set."
            exit 1
          fi
          COMMIT_SHA="${{ github.sha }}"
          GITHUB_ACTOR="${{ github.actor }}"
          WORKFLOW_NAME="${{ github.workflow }}"
          TIMESTAMP=$(date +%s%3N)
          echo "Using log group: $LOG_GROUP_NAME"
          echo "Log stream: $LOG_STREAM_NAME"
          # Create log group (ignore error if it already exists)
          aws logs create-log-group \
            --log-group-name "$LOG_GROUP_NAME" || true
          # Create log stream (ignore error if it already exists)
          aws logs create-log-stream \
            --log-group-name "$LOG_GROUP_NAME" \
            --log-stream-name "$LOG_STREAM_NAME" || true
          # Create the log message as a single string
          LOG_MESSAGE="Workflow: ${WORKFLOW_NAME}, Commit: ${COMMIT_SHA}, Actor: ${GITHUB_ACTOR}, Branch: ${{ github.ref_name }}, Timestamp: ${TIMESTAMP}"
          # Put log event with proper JSON format
          aws logs put-log-events \
            --log-group-name "$LOG_GROUP_NAME" \
            --log-stream-name "$LOG_STREAM_NAME" \
            --log-events "[{\"timestamp\":$TIMESTAMP,\"message\":\"$LOG_MESSAGE\"}]"